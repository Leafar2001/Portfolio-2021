@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}
@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}
@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}
@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}
@mixin rotate ($deg) {
   @include transform(rotate(#{$deg}deg));
}
@mixin scale($scale) {
   @include transform(scale($scale));
}
@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}
@mixin skew ($x, $y) {
   @include transform(skew(#{$x}deg, #{$y}deg));
}
@mixin transform-origin ($origin) {
  moz-transform-origin: $origin;
  -o-transform-origin: $origin;
  -ms-transform-origin: $origin;
  -webkit-transform-origin: $origin;
  transform-origin: $origin;
}
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie);
}
@mixin breakpoint($point) {
   @if $point == desktop{
    @media (min-width: 70em) {
       @content;
    }
  }
  @else if $point == laptop {
     @media (min-width: 64em){
      @content;
    }
  }
  @else if $point == tablet {
     @media (min-width: 50em){
      @content;
    }
  }
  @else if $point == phablet {
     @media (min-width: 37.5em){
      @content;
    }
  }
  @else if $point == mobileonly {
     @media (max-width: 37.5em){
      @content;
    }
  }
}
